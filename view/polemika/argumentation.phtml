<?php
$site = $this->vars('site');

//récupère les utiles de la page
$props = $this->pageProps();
$item = $this->getItem($props);
$urls = $this->pageUrls($props,$item,"argumentation");

//récupère la liste des cartes argumentaires
//$cartes = $this->getCarteArgumentaire($item, $props);

?>
<section class="hero-section">               

        <div class="container" id="contPage" style="color:white" >
            <div class="row">
                <div class="col-lg-6 col-md-6">
                    <div class="header__info-left">
                        <div class="ui-widget">
                            <label for="cartes">Sélectionner une carte :</label>
                            <div id="spin-cartes" style="display: none;"
                                    class="spinner-border spinner-border-sm"
                                    role="status">
                                    <span class="sr-only">Chargement...</span>
                            </div>
                            <input class="form-control" id="cartes" size="64">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <h3 id="sltCarte" style="color:white;" ></h3>
                </div>
            </div>
            <div class="row" id="contCarte" style="height:800px;background-color:white;margin-top:10px;">

            </div>
        </div>
</section>


<script src="<?php echo $this->assetUrl('js/d3.V6.min.js');?>"></script>
<script src='<?php echo $this->assetUrl('js/carteArgument.js');?>'></script>


<script>
const urlAutoComplete = "<?php echo $urls['autoComplete'];?>";


$(function() {
    console.log("page chargée");
    setAutoComplete('cartes');
    //drawRapport({value:'TEST',id:6716});

});

function setAutoComplete(id){

$("#"+id)
        // don't navigate away from the field on tab when selecting an item
        .on("keydown", function (event) {
                if (event.keyCode === $.ui.keyCode.TAB &&
                        $(this).autocomplete("instance").menu.active) {
                        event.preventDefault();
                }
        })
        .autocomplete({
                minLength: 3,
                source: function (request, response) {
                        searchTerm = request.term;
                        d3.select('#spin-'+id).style('display', 'inline-block');
                        d3.select('#icon-'+id).style('display', 'none');
                        $.ajax({
                                url: urlAutoComplete + searchTerm,
                                dataType: "json",
                                success: function (data) {
                                        d3.select('#spin-'+id).style('display', 'none');
                                        d3.select('#icon-'+id).style('display', 'inline-block');
                                        let rs = data.map(d => {
                                            let v = d['o:title']+' ('+d['o:id']+' - '+d["dcterms:creator"][0]["@value"]
                                                +' - '+d["dcterms:created"][0]["@value"]+')';
                                                return {
                                                        'value': v,
                                                        'id': d['o:id']
                                                }
                                        })
                                        response(rs);
                                }
                        })
                },
                focus: function () {
                        // prevent value inserted on focus
                        return false;
                },
                select: function (event, ui) {
                        if(id=='cartes') drawRapport(ui.item);
                        this.value = "";
                        return false;
                },
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
                const regex = new RegExp(searchTerm, "gi");
                let html = '<a>' + item.label.replace(regex, '<span class="findTerm">' + searchTerm + '</span>') + '</a>';
                return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append(html)
                        .appendTo(ul);
        };
}
function drawRapport(item){
    console.log(item);
    d3.select('#sltCarte').html(item.value);

    $.ajax({
        url: '../page/ajax?type=carteArgumentaire&json=1&id=' + item.id,
        dataType: "json",
        success: function (data) {
            console.log(data);
            //calcul la taille du conteneur
            let contCarte = d3.select("#contCarte").node();            
            let ca = new carteArgument({'data':data,'idCont':'contCarte'
                ,'width':contCarte.offsetWidth,'height':contCarte.offsetHeight})
        }
    })
}
</script>  